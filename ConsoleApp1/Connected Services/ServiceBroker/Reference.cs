//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.ServiceBroker {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBroker.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_IncluirServidor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Broker_IncluirServidor(string servidor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_IncluirServidor", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Broker_IncluirServidorAsync(string servidor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_ExcluirServidor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Broker_ExcluirServidor(string servidor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_ExcluirServidor", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Broker_ExcluirServidorAsync(string servidor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_ListarServidores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Broker_ListarServidores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_ListarServidores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Broker_ListarServidoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_BuscarServidor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Broker_BuscarServidor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Broker_BuscarServidor", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Broker_BuscarServidorAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : ConsoleApp1.ServiceBroker.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<ConsoleApp1.ServiceBroker.WebService1Soap>, ConsoleApp1.ServiceBroker.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Broker_IncluirServidor(string servidor) {
            return base.Channel.Broker_IncluirServidor(servidor);
        }
        
        public System.Threading.Tasks.Task<string> Broker_IncluirServidorAsync(string servidor) {
            return base.Channel.Broker_IncluirServidorAsync(servidor);
        }
        
        public string Broker_ExcluirServidor(string servidor) {
            return base.Channel.Broker_ExcluirServidor(servidor);
        }
        
        public System.Threading.Tasks.Task<string> Broker_ExcluirServidorAsync(string servidor) {
            return base.Channel.Broker_ExcluirServidorAsync(servidor);
        }
        
        public System.Data.DataSet Broker_ListarServidores() {
            return base.Channel.Broker_ListarServidores();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Broker_ListarServidoresAsync() {
            return base.Channel.Broker_ListarServidoresAsync();
        }
        
        public string Broker_BuscarServidor() {
            return base.Channel.Broker_BuscarServidor();
        }
        
        public System.Threading.Tasks.Task<string> Broker_BuscarServidorAsync() {
            return base.Channel.Broker_BuscarServidorAsync();
        }
    }
}
